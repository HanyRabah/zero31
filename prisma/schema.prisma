generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(EDITOR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProjectType {
  id        String    @id @default(cuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  projects  Project[]
}

model ProjectScope {
  id        String             @id @default(cuid())
  name      String             @unique
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  projects  ProjectsOnScopes[]
}

model Project {
  id           String             @id @default(cuid())
  slug         String             @unique
  title        String?
  clientName   String
  heroImage    String             @db.Text
  heroImageAlt String
  thumbnail    String             @db.Text
  thumbnailAlt String
  description  String             @db.Text
  area         String?
  location     String?
  year         String?
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  typeId       String?
  type         ProjectType?       @relation(fields: [typeId], references: [id])
  sections     ProjectSection[]
  scopes       ProjectsOnScopes[]

  @@index([typeId])
}

model ProjectsOnScopes {
  projectId  String
  scopeId    String
  assignedAt DateTime     @default(now())
  project    Project      @relation(fields: [projectId], references: [id], onDelete: Cascade)
  scope      ProjectScope @relation(fields: [scopeId], references: [id], onDelete: Cascade)

  @@id([projectId, scopeId])
  @@index([scopeId])
}

model ProjectSection {
  id              String   @id @default(cuid())
  description     String?  @db.Text
  backgroundColor String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  projectId       String
  images          Image[]
  project         Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@index([projectId])
}

model Image {
  id        String         @id @default(cuid())
  url       String         @db.Text
  alt       String?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  sectionId String
  section   ProjectSection @relation(fields: [sectionId], references: [id], onDelete: Cascade)

  @@index([sectionId])
}

enum Role {
  ADMIN
  EDITOR
}
